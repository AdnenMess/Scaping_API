{
    "kind": "Listing",
    "data": {
        "after": null,
        "dist": 21,
        "modhash": null,
        "geo_filter": "",
        "children": [
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "Hi, I'd like to introduce PaddleOCR tool which is simple, easy, and ready to use right away.\n\nGithub: [https://github.com/PaddlePaddle/PaddleOCR](https://github.com/PaddlePaddle/PaddleOCR)\n\nDemo: [https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.5/doc/doc\\_en/whl\\_en.md](https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.5/doc/doc_en/whl_en.md)\n\n&amp;#x200B;\n\n    # install paddleocr\n    pip install paddlepaddle paddleocr\n    paddleocr --image_dir doc.jpg --lang en --use_gpu false\n\n&amp;#x200B;\n\nhttps://preview.redd.it/vmak94hb2ei91.png?width=1935&amp;format=png&amp;auto=webp&amp;s=be343c9212396b40c62ce6fd44a3eaff4df8c83c\n\n&amp;#x200B;\n\nhttps://preview.redd.it/m3gaagqg2ei91.png?width=2332&amp;format=png&amp;auto=webp&amp;s=bf378d5ffcdf6ecc8f84424aa1454b1d4d314218\n\n&amp;#x200B;\n\nhttps://preview.redd.it/7zl05qyi2ei91.png?width=2868&amp;format=png&amp;auto=webp&amp;s=14366f011992e2c128b6a51280950067046a9fa0\n\nhttps://preview.redd.it/iamyeqgh2ei91.png?width=3194&amp;format=png&amp;auto=webp&amp;s=2ee456278e568ac400bec02d790e4a75701c273b\n\n&amp;#x200B;\n\nhttps://preview.redd.it/q168g4uj2ei91.png?width=2160&amp;format=png&amp;auto=webp&amp;s=bacc86fb25e8464b18b3d3baeee9f186d9cba2d0",
                    "author_fullname": "t2_cgjcz9iv",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "[OCR]A new OCR tool with better text recognition for documents and cards.",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Beginner Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "beginner-showcase",
                    "downs": 0,
                    "thumbnail_height": 104,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "media_metadata": {
                        "vmak94hb2ei91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 80,
                                    "x": 108,
                                    "u": "https://preview.redd.it/vmak94hb2ei91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=aed1cda174709618827b4a225d8e5b865af90201"
                                },
                                {
                                    "y": 160,
                                    "x": 216,
                                    "u": "https://preview.redd.it/vmak94hb2ei91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=0cacfcccddabe90e44ac3626e2402699109d70d7"
                                },
                                {
                                    "y": 238,
                                    "x": 320,
                                    "u": "https://preview.redd.it/vmak94hb2ei91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=79108106f7f001c86e14852bb31db6457abcbcbb"
                                },
                                {
                                    "y": 476,
                                    "x": 640,
                                    "u": "https://preview.redd.it/vmak94hb2ei91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=d820f00ab0e275f70f0421ece39fae497d61f258"
                                },
                                {
                                    "y": 714,
                                    "x": 960,
                                    "u": "https://preview.redd.it/vmak94hb2ei91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=0bd58fe2e673e7d8ee9f6313142bbbe3c7579a6b"
                                },
                                {
                                    "y": 803,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/vmak94hb2ei91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e63588a7f14b1e468f24a40b501546e059850ceb"
                                }
                            ],
                            "s": {
                                "y": 1440,
                                "x": 1935,
                                "u": "https://preview.redd.it/vmak94hb2ei91.png?width=1935&amp;format=png&amp;auto=webp&amp;s=be343c9212396b40c62ce6fd44a3eaff4df8c83c"
                            },
                            "id": "vmak94hb2ei91"
                        },
                        "iamyeqgh2ei91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 24,
                                    "x": 108,
                                    "u": "https://preview.redd.it/iamyeqgh2ei91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=21d098d7fdb7c576d828368847b6c26a48359587"
                                },
                                {
                                    "y": 49,
                                    "x": 216,
                                    "u": "https://preview.redd.it/iamyeqgh2ei91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=da7b10a13796f5dc6923ecad36f2848d164c8de2"
                                },
                                {
                                    "y": 73,
                                    "x": 320,
                                    "u": "https://preview.redd.it/iamyeqgh2ei91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=897f6965e77c2291af7eddb23623a3cd6a79b56f"
                                },
                                {
                                    "y": 146,
                                    "x": 640,
                                    "u": "https://preview.redd.it/iamyeqgh2ei91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=8331dd9b394b55bdd071d7b3a5bf0d053bc8f19f"
                                },
                                {
                                    "y": 219,
                                    "x": 960,
                                    "u": "https://preview.redd.it/iamyeqgh2ei91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=e677567fcb9cbf56c9fb13a3f54bb2ecf52c7604"
                                },
                                {
                                    "y": 247,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/iamyeqgh2ei91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=741b5993eef1c553aa3b681c8889e8070faa69f2"
                                }
                            ],
                            "s": {
                                "y": 731,
                                "x": 3194,
                                "u": "https://preview.redd.it/iamyeqgh2ei91.png?width=3194&amp;format=png&amp;auto=webp&amp;s=2ee456278e568ac400bec02d790e4a75701c273b"
                            },
                            "id": "iamyeqgh2ei91"
                        },
                        "m3gaagqg2ei91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 66,
                                    "x": 108,
                                    "u": "https://preview.redd.it/m3gaagqg2ei91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=3e0c57e7a00d37985c1947a05ad26c2ed4da7164"
                                },
                                {
                                    "y": 133,
                                    "x": 216,
                                    "u": "https://preview.redd.it/m3gaagqg2ei91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=2cd103ef843f30c3827b9ca2c129020376d530b9"
                                },
                                {
                                    "y": 197,
                                    "x": 320,
                                    "u": "https://preview.redd.it/m3gaagqg2ei91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=145674b886c6f0f850c17b0e1471d50449b22dce"
                                },
                                {
                                    "y": 395,
                                    "x": 640,
                                    "u": "https://preview.redd.it/m3gaagqg2ei91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=51496ddacfa928ffcb039b1694e1c2c6c7b51616"
                                },
                                {
                                    "y": 592,
                                    "x": 960,
                                    "u": "https://preview.redd.it/m3gaagqg2ei91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=4b970c7d0024eccd5419b0041c67c0f27bcc9e29"
                                },
                                {
                                    "y": 666,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/m3gaagqg2ei91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1b388854b93f71e61bc8ae397856e61feba2abba"
                                }
                            ],
                            "s": {
                                "y": 1440,
                                "x": 2332,
                                "u": "https://preview.redd.it/m3gaagqg2ei91.png?width=2332&amp;format=png&amp;auto=webp&amp;s=bf378d5ffcdf6ecc8f84424aa1454b1d4d314218"
                            },
                            "id": "m3gaagqg2ei91"
                        },
                        "7zl05qyi2ei91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 34,
                                    "x": 108,
                                    "u": "https://preview.redd.it/7zl05qyi2ei91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=b0305da58729143451c24c5b047a2d890000b59d"
                                },
                                {
                                    "y": 69,
                                    "x": 216,
                                    "u": "https://preview.redd.it/7zl05qyi2ei91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=735e9037baa7b0869ab94fbca0ffc86c7d9ecfbc"
                                },
                                {
                                    "y": 102,
                                    "x": 320,
                                    "u": "https://preview.redd.it/7zl05qyi2ei91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=e458bd98183ef39b4e944a9dbff315524721849f"
                                },
                                {
                                    "y": 205,
                                    "x": 640,
                                    "u": "https://preview.redd.it/7zl05qyi2ei91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=fefdcf8e3d7e936b16bf0e3c11662af30f8d6e12"
                                },
                                {
                                    "y": 307,
                                    "x": 960,
                                    "u": "https://preview.redd.it/7zl05qyi2ei91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=940209a4f3a01e679a153337ace5148e11b9a8bf"
                                },
                                {
                                    "y": 346,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/7zl05qyi2ei91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9e67f5229f259852c8049323f43d19c3c930906b"
                                }
                            ],
                            "s": {
                                "y": 920,
                                "x": 2868,
                                "u": "https://preview.redd.it/7zl05qyi2ei91.png?width=2868&amp;format=png&amp;auto=webp&amp;s=14366f011992e2c128b6a51280950067046a9fa0"
                            },
                            "id": "7zl05qyi2ei91"
                        },
                        "q168g4uj2ei91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 72,
                                    "x": 108,
                                    "u": "https://preview.redd.it/q168g4uj2ei91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=b04b898d7b2da1c5146f5bb441be9c5e07796201"
                                },
                                {
                                    "y": 144,
                                    "x": 216,
                                    "u": "https://preview.redd.it/q168g4uj2ei91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=b5aae2313121cec1c089b4bf38e5b300c607c3fc"
                                },
                                {
                                    "y": 213,
                                    "x": 320,
                                    "u": "https://preview.redd.it/q168g4uj2ei91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=6c8fcbdf248638c39d20f86c7181f7127c256f47"
                                },
                                {
                                    "y": 426,
                                    "x": 640,
                                    "u": "https://preview.redd.it/q168g4uj2ei91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=0b9afa13362d39ecd49b45bd09b9cba39c274344"
                                },
                                {
                                    "y": 640,
                                    "x": 960,
                                    "u": "https://preview.redd.it/q168g4uj2ei91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=c9dd735410818c426cf3845a77a6ec52125a572c"
                                },
                                {
                                    "y": 720,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/q168g4uj2ei91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=098352e0dd34f1f94cc0a9f653a13a01dd194c80"
                                }
                            ],
                            "s": {
                                "y": 1440,
                                "x": 2160,
                                "u": "https://preview.redd.it/q168g4uj2ei91.png?width=2160&amp;format=png&amp;auto=webp&amp;s=bacc86fb25e8464b18b3d3baeee9f186d9cba2d0"
                            },
                            "id": "q168g4uj2ei91"
                        }
                    },
                    "name": "t3_wr8f5u",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.94,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 127,
                    "total_awards_received": 1,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Beginner Showcase",
                    "can_mod_post": false,
                    "score": 127,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/2wRYJu5W4kMsIersMLcMWg5d1L0e3A6jg4SALB2ou3o.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660792336.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;d like to introduce PaddleOCR tool which is simple, easy, and ready to use right away.&lt;/p&gt;\n\n&lt;p&gt;Github: &lt;a href=\"https://github.com/PaddlePaddle/PaddleOCR\"&gt;https://github.com/PaddlePaddle/PaddleOCR&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Demo: &lt;a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.5/doc/doc_en/whl_en.md\"&gt;https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.5/doc/doc_en/whl_en.md&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# install paddleocr\npip install paddlepaddle paddleocr\npaddleocr --image_dir doc.jpg --lang en --use_gpu false\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/vmak94hb2ei91.png?width=1935&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=be343c9212396b40c62ce6fd44a3eaff4df8c83c\"&gt;https://preview.redd.it/vmak94hb2ei91.png?width=1935&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=be343c9212396b40c62ce6fd44a3eaff4df8c83c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/m3gaagqg2ei91.png?width=2332&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=bf378d5ffcdf6ecc8f84424aa1454b1d4d314218\"&gt;https://preview.redd.it/m3gaagqg2ei91.png?width=2332&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=bf378d5ffcdf6ecc8f84424aa1454b1d4d314218&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/7zl05qyi2ei91.png?width=2868&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=14366f011992e2c128b6a51280950067046a9fa0\"&gt;https://preview.redd.it/7zl05qyi2ei91.png?width=2868&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=14366f011992e2c128b6a51280950067046a9fa0&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/iamyeqgh2ei91.png?width=3194&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2ee456278e568ac400bec02d790e4a75701c273b\"&gt;https://preview.redd.it/iamyeqgh2ei91.png?width=3194&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2ee456278e568ac400bec02d790e4a75701c273b&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/q168g4uj2ei91.png?width=2160&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=bacc86fb25e8464b18b3d3baeee9f186d9cba2d0\"&gt;https://preview.redd.it/q168g4uj2ei91.png?width=2160&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=bacc86fb25e8464b18b3d3baeee9f186d9cba2d0&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [
                        {
                            "giver_coin_reward": null,
                            "subreddit_id": null,
                            "is_new": false,
                            "days_of_drip_extension": null,
                            "coin_price": 125,
                            "id": "award_5f123e3d-4f48-42f4-9c11-e98b566d5897",
                            "penny_donate": null,
                            "award_sub_type": "GLOBAL",
                            "coin_reward": 0,
                            "icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png",
                            "days_of_premium": null,
                            "tiers_by_required_awardings": null,
                            "resized_icons": [
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0",
                                    "width": 16,
                                    "height": 16
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef",
                                    "width": 32,
                                    "height": 32
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63",
                                    "width": 48,
                                    "height": 48
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb",
                                    "width": 64,
                                    "height": 64
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b",
                                    "width": 128,
                                    "height": 128
                                }
                            ],
                            "icon_width": 2048,
                            "static_icon_width": 2048,
                            "start_date": null,
                            "is_enabled": true,
                            "awardings_required_to_grant_benefits": null,
                            "description": "When you come across a feel-good thing.",
                            "end_date": null,
                            "sticky_duration_seconds": null,
                            "subreddit_coin_reward": 0,
                            "count": 1,
                            "static_icon_height": 2048,
                            "name": "Wholesome",
                            "resized_static_icons": [
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0",
                                    "width": 16,
                                    "height": 16
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef",
                                    "width": 32,
                                    "height": 32
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63",
                                    "width": 48,
                                    "height": 48
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb",
                                    "width": 64,
                                    "height": 64
                                },
                                {
                                    "url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b",
                                    "width": 128,
                                    "height": 128
                                }
                            ],
                            "icon_format": null,
                            "icon_height": 2048,
                            "penny_price": null,
                            "award_type": "global",
                            "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png"
                        }
                    ],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#73ad34",
                    "id": "wr8f5u",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "D_leapfrog",
                    "discussion_type": null,
                    "num_comments": 8,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wr8f5u/ocra_new_ocr_tool_with_better_text_recognition/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wr8f5u/ocra_new_ocr_tool_with_better_text_recognition/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660792336.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "[Mito](https://github.com/mito-ds/monorepo) is an open source Python package that lets the user call an interactive spreadsheet into their Python environment. Each edit made in the spreadsheet generates the equivalent Python in the code cell below. \n\nYou can pivot, graph, filter, merge, EDA, use spreadsheet functions and formulas, format, import/export dataframes, CSVs, Excel files, and much more -- Mito writes the code for you. \n\nMito is being used by every level of technical ability. New Python users can take advantage of their spreadsheet ability to engage with Python, while Python pros find pivoting and graphing much faster in Mito than writing the code by hand. \n\nCheck out the Github [here.](https://github.com/mito-ds/monorepo)",
                    "author_fullname": "t2_17ixgo",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "A Spreadsheet that Writes Python as you Edit it",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Intermediate Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "intermediate-showcase",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wr1teq",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.8,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 20,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Intermediate Showcase",
                    "can_mod_post": false,
                    "score": 20,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660774414.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/mito-ds/monorepo\"&gt;Mito&lt;/a&gt; is an open source Python package that lets the user call an interactive spreadsheet into their Python environment. Each edit made in the spreadsheet generates the equivalent Python in the code cell below. &lt;/p&gt;\n\n&lt;p&gt;You can pivot, graph, filter, merge, EDA, use spreadsheet functions and formulas, format, import/export dataframes, CSVs, Excel files, and much more -- Mito writes the code for you. &lt;/p&gt;\n\n&lt;p&gt;Mito is being used by every level of technical ability. New Python users can take advantage of their spreadsheet ability to engage with Python, while Python pros find pivoting and graphing much faster in Mito than writing the code by hand. &lt;/p&gt;\n\n&lt;p&gt;Check out the Github &lt;a href=\"https://github.com/mito-ds/monorepo\"&gt;here.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#ea0027",
                    "id": "wr1teq",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "aarondiamond-reivich",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wr1teq/a_spreadsheet_that_writes_python_as_you_edit_it/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wr1teq/a_spreadsheet_that_writes_python_as_you_edit_it/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660774414.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": " \n\nHi all this is my project I'm doing my first Text Editor. It is still not complete and code need do litle bit better. I did screenshot how my editor look and here is code. I'm doing project like this first time [https://github.com/liborhavranek/TextEditor](https://github.com/liborhavranek/TextEditor?fbclid=IwAR16S9fuObDzs-UjR7KD05yrzZ27ToIpVayYwYoBLvl_MLtpt_RDkugxUY8)\n\nhere is code   \n[https://github.com/liborha.../TextEditor/blob/master/main.py](https://github.com/liborhavranek/TextEditor/blob/master/main.py?fbclid=IwAR1nLD9RXhEYMzq8uIBtPNBt7POGur5V6iOx-BNBuf6nU02Rrqgjw1eEFWU)\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n[day mode](https://preview.redd.it/dnhjlhar4gi91.png?width=1920&amp;format=png&amp;auto=webp&amp;s=3aa7a638cad3821121f169562a6356163deb3e0c)\n\n&amp;#x200B;\n\n[night mode](https://preview.redd.it/74nlhrlv4gi91.png?width=1920&amp;format=png&amp;auto=webp&amp;s=1f504f06260b42896545fa6c5c99c7d03927dce6)",
                    "author_fullname": "t2_ga7fwxj4",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "My firs project in python TextEditor used Tkinter",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Beginner Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "beginner-showcase",
                    "downs": 0,
                    "thumbnail_height": 78,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "media_metadata": {
                        "74nlhrlv4gi91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 60,
                                    "x": 108,
                                    "u": "https://preview.redd.it/74nlhrlv4gi91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=9a507251341373fc5aec6eee0e8380b1cfc70623"
                                },
                                {
                                    "y": 121,
                                    "x": 216,
                                    "u": "https://preview.redd.it/74nlhrlv4gi91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=e23554e9619dca7f5ec625b85786c70758eb173f"
                                },
                                {
                                    "y": 180,
                                    "x": 320,
                                    "u": "https://preview.redd.it/74nlhrlv4gi91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=552aa33204e147f4813a20edc063e28abdb99950"
                                },
                                {
                                    "y": 360,
                                    "x": 640,
                                    "u": "https://preview.redd.it/74nlhrlv4gi91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=a924cf310efca55aa472e300f1294556ac498b6c"
                                },
                                {
                                    "y": 540,
                                    "x": 960,
                                    "u": "https://preview.redd.it/74nlhrlv4gi91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=57aff4455d6aa3d7fdc32b4009ba67656307e3b4"
                                },
                                {
                                    "y": 607,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/74nlhrlv4gi91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=153f7cf803087fda1ae13c2fb21109f9a17a910a"
                                }
                            ],
                            "s": {
                                "y": 1080,
                                "x": 1920,
                                "u": "https://preview.redd.it/74nlhrlv4gi91.png?width=1920&amp;format=png&amp;auto=webp&amp;s=1f504f06260b42896545fa6c5c99c7d03927dce6"
                            },
                            "id": "74nlhrlv4gi91"
                        },
                        "dnhjlhar4gi91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 60,
                                    "x": 108,
                                    "u": "https://preview.redd.it/dnhjlhar4gi91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=0c77f62a4e02e05a24752577ffd05077c15fd9bf"
                                },
                                {
                                    "y": 121,
                                    "x": 216,
                                    "u": "https://preview.redd.it/dnhjlhar4gi91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=c111a5d8c24fa60770fe316cfd7e23322c9a330f"
                                },
                                {
                                    "y": 180,
                                    "x": 320,
                                    "u": "https://preview.redd.it/dnhjlhar4gi91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=73e68a6603bca7b16de0f5ba9224a5eb9ceb1e7d"
                                },
                                {
                                    "y": 360,
                                    "x": 640,
                                    "u": "https://preview.redd.it/dnhjlhar4gi91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=6457dcf8d54dfb10e68e6b4e895adee9cd0de5e3"
                                },
                                {
                                    "y": 540,
                                    "x": 960,
                                    "u": "https://preview.redd.it/dnhjlhar4gi91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=3b7cc22d40366afb1e522b0e218a9e7cd83f2314"
                                },
                                {
                                    "y": 607,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/dnhjlhar4gi91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=861620b05b7a6b6f7fac86c061f3f9f0fa75b888"
                                }
                            ],
                            "s": {
                                "y": 1080,
                                "x": 1920,
                                "u": "https://preview.redd.it/dnhjlhar4gi91.png?width=1920&amp;format=png&amp;auto=webp&amp;s=3aa7a638cad3821121f169562a6356163deb3e0c"
                            },
                            "id": "dnhjlhar4gi91"
                        }
                    },
                    "name": "t3_wrfmtu",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.84,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 12,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Beginner Showcase",
                    "can_mod_post": false,
                    "score": 12,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/fnEqw9gwUny1_V2m7NYOF2mKup7VKJYDJwqOnBhWKJY.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660817312.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all this is my project I&amp;#39;m doing my first Text Editor. It is still not complete and code need do litle bit better. I did screenshot how my editor look and here is code. I&amp;#39;m doing project like this first time &lt;a href=\"https://github.com/liborhavranek/TextEditor?fbclid=IwAR16S9fuObDzs-UjR7KD05yrzZ27ToIpVayYwYoBLvl_MLtpt_RDkugxUY8\"&gt;https://github.com/liborhavranek/TextEditor&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;here is code&lt;br/&gt;\n&lt;a href=\"https://github.com/liborhavranek/TextEditor/blob/master/main.py?fbclid=IwAR1nLD9RXhEYMzq8uIBtPNBt7POGur5V6iOx-BNBuf6nU02Rrqgjw1eEFWU\"&gt;https://github.com/liborha.../TextEditor/blob/master/main.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/dnhjlhar4gi91.png?width=1920&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=3aa7a638cad3821121f169562a6356163deb3e0c\"&gt;day mode&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/74nlhrlv4gi91.png?width=1920&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=1f504f06260b42896545fa6c5c99c7d03927dce6\"&gt;night mode&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#73ad34",
                    "id": "wrfmtu",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "ctiborekskutr",
                    "discussion_type": null,
                    "num_comments": 2,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrfmtu/my_firs_project_in_python_texteditor_used_tkinter/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrfmtu/my_firs_project_in_python_texteditor_used_tkinter/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660817312.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "I wrote this tool for my own needs but I am releasing it here because others may also find a use for it.\n\nPlease note that my first name for it was AdvancedStrings hence the github name but I could not upload it with that name to PiPy hence the new name!\n\nIt contains functions like:\n\n     SplitFromTo()\n     CountSize()\n     RemoveAllOfCharInStr()\n     RemoveFirstOfCharInStr()\n     RemoveFinalOfCharInStr()\n     GetCharAtIndex()\n     SetCharAtIndex()\n     SplitStrToArrayByChar()\n     SplitStrByChar()\n     ReplaceAllOccurrencesOfChar()\n     ReplaceFirstOccurrencesOfChar()\n     ReplaceFinalOccurrencesOfChar()\n     EncodeStrToNumbers()\n     DecodeStrToNumbers()\n\nStringyie: [https://pypi.org/project/Stringyie/](https://pypi.org/project/Stringyie/)\n\nBut way more to come! I am also planning on adding some int and float functions aswell!\n\nPlease do suggest any other functions you would like to see here",
                    "author_fullname": "t2_f9glfriv",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "Stringyie | Python module to make using strings a breeze",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Intermediate Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "intermediate-showcase",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrfq5l",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.6,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 7,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Intermediate Showcase",
                    "can_mod_post": false,
                    "score": 7,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": 1660818573.0,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "self",
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660817639.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": true,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote this tool for my own needs but I am releasing it here because others may also find a use for it.&lt;/p&gt;\n\n&lt;p&gt;Please note that my first name for it was AdvancedStrings hence the github name but I could not upload it with that name to PiPy hence the new name!&lt;/p&gt;\n\n&lt;p&gt;It contains functions like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; SplitFromTo()\n CountSize()\n RemoveAllOfCharInStr()\n RemoveFirstOfCharInStr()\n RemoveFinalOfCharInStr()\n GetCharAtIndex()\n SetCharAtIndex()\n SplitStrToArrayByChar()\n SplitStrByChar()\n ReplaceAllOccurrencesOfChar()\n ReplaceFirstOccurrencesOfChar()\n ReplaceFinalOccurrencesOfChar()\n EncodeStrToNumbers()\n DecodeStrToNumbers()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Stringyie: &lt;a href=\"https://pypi.org/project/Stringyie/\"&gt;https://pypi.org/project/Stringyie/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;But way more to come! I am also planning on adding some int and float functions aswell!&lt;/p&gt;\n\n&lt;p&gt;Please do suggest any other functions you would like to see here&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/zRVFLfjI58sm6FNSGRYUcnWA4juih6b47RNhJJEwW0g.jpg?auto=webp&amp;s=7be3fbd68fec490bfe355fd86957ea98a44ab6cd",
                                    "width": 300,
                                    "height": 300
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/zRVFLfjI58sm6FNSGRYUcnWA4juih6b47RNhJJEwW0g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1fe4ea157a78df016e75342500a9c72764be7612",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/zRVFLfjI58sm6FNSGRYUcnWA4juih6b47RNhJJEwW0g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=34c514992d4fab42691b17ec329db3087d91765e",
                                        "width": 216,
                                        "height": 216
                                    }
                                ],
                                "variants": {},
                                "id": "W4uRRTgdWbvpSjbVyu4fF2FNropOSmtKN3N_mIUX_f4"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#ea0027",
                    "id": "wrfq5l",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "Kuriwassadlytaken",
                    "discussion_type": null,
                    "num_comments": 18,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrfq5l/stringyie_python_module_to_make_using_strings_a/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrfq5l/stringyie_python_module_to_make_using_strings_a/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660817639.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**",
                    "author_fullname": "t2_145f96",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Daily Thread"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "daily-thread",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wr48q2",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.84,
                    "author_flair_background_color": "#7289da",
                    "subreddit_type": "public",
                    "ups": 4,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": "294da566-de3a-11ea-b735-0e5977e6a00f",
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Daily Thread",
                    "can_mod_post": false,
                    "score": 4,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [
                        {
                            "a": ":python_discord:",
                            "e": "emoji",
                            "u": "https://emoji.redditmedia.com/x0lrxnhaazg51_t5_2qh0y/python_discord"
                        },
                        {
                            "e": "text",
                            "t": " Python Discord Staff"
                        }
                    ],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660780810.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "richtext",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;This thread is not for recruitment, please see&lt;/strong&gt; &lt;a href=\"/r/PythonJobs\"&gt;r/PythonJobs&lt;/a&gt; &lt;strong&gt;or the thread in the sidebar for that.&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": ":python_discord: Python Discord Staff",
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": "moderator",
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#00a6a5",
                    "id": "wr48q2",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "Im__Joseph",
                    "discussion_type": null,
                    "num_comments": 1,
                    "send_replies": false,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": "light",
                    "permalink": "/r/Python/comments/wr48q2/thursday_daily_thread_python_careers_courses_and/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": true,
                    "url": "https://www.reddit.com/r/Python/comments/wr48q2/thursday_daily_thread_python_careers_courses_and/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660780810.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "`[Richard Strauss' \"Also sprach Zarathustra\" plays in the background]`\n\n# It's... Boris!\n\nhttps://preview.redd.it/ae93pp25vfi91.png?width=1188&amp;format=png&amp;auto=webp&amp;s=93adaccb0172b5423e166d24cfc0ec85a3e96b7b\n\n*Boris* is a [text mode/ASCII art](http://polyducks.co.uk/what-is-textmode/) editor written by Katsumi, the same guy behind the [Al Bhed translator](https://www.reddit.com/r/Python/comments/mq3dv5/al_bhed_translator/).\n\nUnlike the traditional go-to software for creating ASCII art, [Windows Notepad](https://en.wikipedia.org/wiki/Windows_Notepad), *Boris* offers the ability to create colourful artworks with full 16-colour palette.\n\n*Boris* is written in Python 3.10 \u2014 Katsumi's favourite programming language, making it easily customisable.\n\n# Source code\n\nAs always, you can get the source code here: [https://github.com/KatsumiKougen/boris](https://github.com/KatsumiKougen/boris)\n\n*Be sure to read the manual before running the program.*",
                    "author_fullname": "t2_6xklcl3r",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "The new ASCII art/text mode editor, written in Python 3.10",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Intermediate Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "intermediate-showcase",
                    "downs": 0,
                    "thumbnail_height": 84,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "media_metadata": {
                        "ae93pp25vfi91": {
                            "status": "valid",
                            "e": "Image",
                            "m": "image/png",
                            "p": [
                                {
                                    "y": 65,
                                    "x": 108,
                                    "u": "https://preview.redd.it/ae93pp25vfi91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=6ee5e8974dada9b96075bc09b535bb5e41ef8c67"
                                },
                                {
                                    "y": 131,
                                    "x": 216,
                                    "u": "https://preview.redd.it/ae93pp25vfi91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=9242991c05313605bb71a40c5ec64bff982e261f"
                                },
                                {
                                    "y": 194,
                                    "x": 320,
                                    "u": "https://preview.redd.it/ae93pp25vfi91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=d7134ad28bf22cd1bdb57cbf3c4fc0e988ddbc69"
                                },
                                {
                                    "y": 388,
                                    "x": 640,
                                    "u": "https://preview.redd.it/ae93pp25vfi91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=7d039a2b8015b6875000b1158bf602434f5e72a3"
                                },
                                {
                                    "y": 582,
                                    "x": 960,
                                    "u": "https://preview.redd.it/ae93pp25vfi91.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=531eecd8cf9ce8c6d5bb00fd93153cc830721cad"
                                },
                                {
                                    "y": 655,
                                    "x": 1080,
                                    "u": "https://preview.redd.it/ae93pp25vfi91.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5821a2feff3bb4986a83e0eadc50befd3135489d"
                                }
                            ],
                            "s": {
                                "y": 721,
                                "x": 1188,
                                "u": "https://preview.redd.it/ae93pp25vfi91.png?width=1188&amp;format=png&amp;auto=webp&amp;s=93adaccb0172b5423e166d24cfc0ec85a3e96b7b"
                            },
                            "id": "ae93pp25vfi91"
                        }
                    },
                    "name": "t3_wresbj",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 1.0,
                    "author_flair_background_color": null,
                    "ups": 5,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Intermediate Showcase",
                    "can_mod_post": false,
                    "score": 5,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/KiJwZ8TvnfQ17dAW-lBOLs_kYiYCg0Quh5eMcMa9Ywc.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "self",
                    "content_categories": null,
                    "is_self": true,
                    "subreddit_type": "public",
                    "created": 1660814223.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;[Richard Strauss&amp;#39; &amp;quot;Also sprach Zarathustra&amp;quot; plays in the background]&lt;/code&gt;&lt;/p&gt;\n\n&lt;h1&gt;It&amp;#39;s... Boris!&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/ae93pp25vfi91.png?width=1188&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=93adaccb0172b5423e166d24cfc0ec85a3e96b7b\"&gt;https://preview.redd.it/ae93pp25vfi91.png?width=1188&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=93adaccb0172b5423e166d24cfc0ec85a3e96b7b&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Boris&lt;/em&gt; is a &lt;a href=\"http://polyducks.co.uk/what-is-textmode/\"&gt;text mode/ASCII art&lt;/a&gt; editor written by Katsumi, the same guy behind the &lt;a href=\"https://www.reddit.com/r/Python/comments/mq3dv5/al_bhed_translator/\"&gt;Al Bhed translator&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Unlike the traditional go-to software for creating ASCII art, &lt;a href=\"https://en.wikipedia.org/wiki/Windows_Notepad\"&gt;Windows Notepad&lt;/a&gt;, &lt;em&gt;Boris&lt;/em&gt; offers the ability to create colourful artworks with full 16-colour palette.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Boris&lt;/em&gt; is written in Python 3.10 \u2014 Katsumi&amp;#39;s favourite programming language, making it easily customisable.&lt;/p&gt;\n\n&lt;h1&gt;Source code&lt;/h1&gt;\n\n&lt;p&gt;As always, you can get the source code here: &lt;a href=\"https://github.com/KatsumiKougen/boris\"&gt;https://github.com/KatsumiKougen/boris&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Be sure to read the manual before running the program.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/cPAzW8wZTgnBAyI8ZQ_uvrjvWYZXV4MLd0CK7l_Q0zk.jpg?auto=webp&amp;s=a1652102cdd33ef3b1c2f9f4a471bfc6a410e725",
                                    "width": 640,
                                    "height": 432
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/cPAzW8wZTgnBAyI8ZQ_uvrjvWYZXV4MLd0CK7l_Q0zk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c0decf1b2a4f320a62483b4b74a2928b7b1c8d0d",
                                        "width": 108,
                                        "height": 72
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/cPAzW8wZTgnBAyI8ZQ_uvrjvWYZXV4MLd0CK7l_Q0zk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a23bfa97e0fa0c8751b6ef1793d20859be29daf6",
                                        "width": 216,
                                        "height": 145
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/cPAzW8wZTgnBAyI8ZQ_uvrjvWYZXV4MLd0CK7l_Q0zk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=348fd095500e90d715f2a1b9e43f2d18b7768d7d",
                                        "width": 320,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/cPAzW8wZTgnBAyI8ZQ_uvrjvWYZXV4MLd0CK7l_Q0zk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ed25dcab40c25cbfa36cb7159d5434c9a2873ffa",
                                        "width": 640,
                                        "height": 432
                                    }
                                ],
                                "variants": {},
                                "id": "t33xpeIdmfcFE3Id40dnj1UFPvKCOls_67FNl6aqGoI"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "mod_note": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "num_reports": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#ea0027",
                    "id": "wresbj",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "notAssmin",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wresbj/the_new_ascii_arttext_mode_editor_written_in/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wresbj/the_new_ascii_arttext_mode_editor_written_in/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660814223.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "\nhttps://github.com/orsinium-labs/python-lambda-calculus",
                    "author_fullname": "t2_yk16u05",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "python-lambda-calculus: Lambda Calculus things implemented on Python",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Resource"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "resource",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrltq6",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 0.67,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 2,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Resource",
                    "can_mod_post": false,
                    "score": 2,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660834924.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/orsinium-labs/python-lambda-calculus\"&gt;https://github.com/orsinium-labs/python-lambda-calculus&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "",
                    "id": "wrltq6",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "0rsinium",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": false,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrltq6/pythonlambdacalculus_lambda_calculus_things/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrltq6/pythonlambdacalculus_lambda_calculus_things/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660834924.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "Github: https://github.com/manimino/filterbox\n\nPyPI: https://pypi.org/project/filterbox/\n\nI wrote this library because Python seemed to be missing a good way to do find objects by their attributes.\n\nPandas, filter, and list comprehensions are all O(n) - so when you have millions of objects, they bog down. Dicts are very fast, but they only handle exact matches.\n\nSQLite is close, but it's more of a database than a container. FilterBox is faster and more flexible when it comes to finding Python objects by their attributes.",
                    "author_fullname": "t2_ixw5x3ac",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "FilterBox: Container for finding Python objects by their attribute values. Uses B-tree indexes.",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Intermediate Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "intermediate-showcase",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrkvrw",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 1.0,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 3,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Intermediate Showcase",
                    "can_mod_post": false,
                    "score": 3,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660832593.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": true,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Github: &lt;a href=\"https://github.com/manimino/filterbox\"&gt;https://github.com/manimino/filterbox&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;PyPI: &lt;a href=\"https://pypi.org/project/filterbox/\"&gt;https://pypi.org/project/filterbox/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I wrote this library because Python seemed to be missing a good way to do find objects by their attributes.&lt;/p&gt;\n\n&lt;p&gt;Pandas, filter, and list comprehensions are all O(n) - so when you have millions of objects, they bog down. Dicts are very fast, but they only handle exact matches.&lt;/p&gt;\n\n&lt;p&gt;SQLite is close, but it&amp;#39;s more of a database than a container. FilterBox is faster and more flexible when it comes to finding Python objects by their attributes.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#ea0027",
                    "id": "wrkvrw",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "manimino",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrkvrw/filterbox_container_for_finding_python_objects_by/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrkvrw/filterbox_container_for_finding_python_objects_by/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660832593.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "[Htag](https://github.com/manatlan/htag), which is a new **GUI toolkit for building applications for mobile, web, and desktop from a single python3 codebase ...** works well with **matplotlib**, and let you easily create GUI to interact with your matplotlib's figures.\n\nHere is a simple example (only need htag+matplotlib): :\n\n    import matplotlib.pyplot as plt\n    from htag import Tag\n    import io,base64,random\n    \n    class TagPlot(Tag.span):\n        \"\"\" here is a htag'component to rendering an html(svg) plot \"\"\"\n        def init(self,plt):\n            self[\"style\"]=\"display:inline-block\"\n            with io.StringIO() as fid:\n                plt.savefig(fid,format='svg',bbox_inches='tight')\n                self &lt;= fid.getvalue()\n    \n    class App(Tag.body):\n        def init(self):\n            self.content = Tag.div()\n            # create the layout\n            self += Tag.h2(\"MatPlotLib\"+Tag.button(\"Random\",_onclick=self.redraw_plt))\n            self += self.content\n            self.redraw_plt()\n    \n        def redraw_plt(self,obj=None):\n            plt.clf()\n            plt.ylabel('Some numbers')\n            plt.xlabel('Size of my list')\n            my_list=[random.randint(1,10) for i in range(random.randint(20,50))]\n            plt.plot( my_list )\n            \n            self.content.clear()\n            self.content += Tag.div(f\"My list: {my_list}\")\n            self.content += TagPlot(plt)\n    \n    if __name__ == \"__main__\":\n        from htag.runners import BrowserHTTP as Runner\n        Runner(App).run()\n\nAnd ... as it works (AS IS) in pyscript too ... so, you can see a live demo of this htag'app in client-side only (because htag &amp; matplotlib works in a pyscript html env !)\n\n[https://raw.githack.com/manatlan/htag/main/examples/pyscript\\_matplotlib.html](https://raw.githack.com/manatlan/htag/main/examples/pyscript_matplotlib.html)\n\nTo make a real GUI desktop app, you can use the [PyWebView runner](https://manatlan.github.io/htag/runners/#pywebwiew) ... and freeze it (with pyinstaller), to produce a real redistribuable standalone executable (will make a tutorial soon).\n\nCan it be simpler ?!",
                    "author_fullname": "t2_3kkn",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "[HTag+Matplotlib] Using htag to create a **matplotlib** app for desktop, web or mobile ...",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "News"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "news",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrmmwf",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 1.0,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 2,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "News",
                    "can_mod_post": false,
                    "score": 2,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660836915.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/manatlan/htag\"&gt;Htag&lt;/a&gt;, which is a new &lt;strong&gt;GUI toolkit for building applications for mobile, web, and desktop from a single python3 codebase ...&lt;/strong&gt; works well with &lt;strong&gt;matplotlib&lt;/strong&gt;, and let you easily create GUI to interact with your matplotlib&amp;#39;s figures.&lt;/p&gt;\n\n&lt;p&gt;Here is a simple example (only need htag+matplotlib): :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import matplotlib.pyplot as plt\nfrom htag import Tag\nimport io,base64,random\n\nclass TagPlot(Tag.span):\n    &amp;quot;&amp;quot;&amp;quot; here is a htag&amp;#39;component to rendering an html(svg) plot &amp;quot;&amp;quot;&amp;quot;\n    def init(self,plt):\n        self[&amp;quot;style&amp;quot;]=&amp;quot;display:inline-block&amp;quot;\n        with io.StringIO() as fid:\n            plt.savefig(fid,format=&amp;#39;svg&amp;#39;,bbox_inches=&amp;#39;tight&amp;#39;)\n            self &amp;lt;= fid.getvalue()\n\nclass App(Tag.body):\n    def init(self):\n        self.content = Tag.div()\n        # create the layout\n        self += Tag.h2(&amp;quot;MatPlotLib&amp;quot;+Tag.button(&amp;quot;Random&amp;quot;,_onclick=self.redraw_plt))\n        self += self.content\n        self.redraw_plt()\n\n    def redraw_plt(self,obj=None):\n        plt.clf()\n        plt.ylabel(&amp;#39;Some numbers&amp;#39;)\n        plt.xlabel(&amp;#39;Size of my list&amp;#39;)\n        my_list=[random.randint(1,10) for i in range(random.randint(20,50))]\n        plt.plot( my_list )\n\n        self.content.clear()\n        self.content += Tag.div(f&amp;quot;My list: {my_list}&amp;quot;)\n        self.content += TagPlot(plt)\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    from htag.runners import BrowserHTTP as Runner\n    Runner(App).run()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And ... as it works (AS IS) in pyscript too ... so, you can see a live demo of this htag&amp;#39;app in client-side only (because htag &amp;amp; matplotlib works in a pyscript html env !)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://raw.githack.com/manatlan/htag/main/examples/pyscript_matplotlib.html\"&gt;https://raw.githack.com/manatlan/htag/main/examples/pyscript_matplotlib.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;To make a real GUI desktop app, you can use the &lt;a href=\"https://manatlan.github.io/htag/runners/#pywebwiew\"&gt;PyWebView runner&lt;/a&gt; ... and freeze it (with pyinstaller), to produce a real redistribuable standalone executable (will make a tutorial soon).&lt;/p&gt;\n\n&lt;p&gt;Can it be simpler ?!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": false,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "",
                    "id": "wrmmwf",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "manatlan",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrmmwf/htagmatplotlib_using_htag_to_create_a_matplotlib/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrmmwf/htagmatplotlib_using_htag_to_create_a_matplotlib/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660836915.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "I have written an app that I use to help with the setup of LoadBalancer configurations and feature validation but it has shown something up that seems curious. Within the code I use the app context variable \"session\" to determine when a client session has switched. What is notable with this is that if I use private/incognito browsing for Safari or Firefox, then each tab gets its own session object as expected. When I use Chrome though (or Brave), the session context is shared between private browsing tabs. \n\nThe code I have written is in the repo below but I am not doing anything magic. It is written in Python3.10 with Flask. I have validated the cookie content as shown in the web page [http://peekaboo.alpha.apps.tap2.tanzu.rocks/](http://peekaboo.alpha.apps.tap2.tanzu.rocks/) (web site access not assured to be available as it is a test k8s cluster).  The only cookie field I am adding is the requestid/fingerprint string which is just a generated UUID from the start of the session.\n\n[https://github.com/davlloyd/peekaboo](https://github.com/davlloyd/peekaboo)\n\nMy question is if I am missing something here or is there a security concern between incognito tabs in Chrome that treat isolation different when concurrent common sessions are running?",
                    "author_fullname": "t2_8pb7hyym",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "How private is your private browsing tab with Flask Session?",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Discussion"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "discussion",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wr3qww",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 0.71,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 3,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Discussion",
                    "can_mod_post": false,
                    "score": 3,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "self",
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660779436.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have written an app that I use to help with the setup of LoadBalancer configurations and feature validation but it has shown something up that seems curious. Within the code I use the app context variable &amp;quot;session&amp;quot; to determine when a client session has switched. What is notable with this is that if I use private/incognito browsing for Safari or Firefox, then each tab gets its own session object as expected. When I use Chrome though (or Brave), the session context is shared between private browsing tabs. &lt;/p&gt;\n\n&lt;p&gt;The code I have written is in the repo below but I am not doing anything magic. It is written in Python3.10 with Flask. I have validated the cookie content as shown in the web page &lt;a href=\"http://peekaboo.alpha.apps.tap2.tanzu.rocks/\"&gt;http://peekaboo.alpha.apps.tap2.tanzu.rocks/&lt;/a&gt; (web site access not assured to be available as it is a test k8s cluster).  The only cookie field I am adding is the requestid/fingerprint string which is just a generated UUID from the start of the session.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/davlloyd/peekaboo\"&gt;https://github.com/davlloyd/peekaboo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My question is if I am missing something here or is there a security concern between incognito tabs in Chrome that treat isolation different when concurrent common sessions are running?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/26oV5hvb-4YoCzSMbtmQIGa5wCVA9OZNA66xcRA5ou0.jpg?auto=webp&amp;s=325e68a99bcc499dd1fc4e127309613948ca534d",
                                    "width": 300,
                                    "height": 300
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/26oV5hvb-4YoCzSMbtmQIGa5wCVA9OZNA66xcRA5ou0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7ed0e72cd37a93c1565d61c2a3c1e96d3184ee6c",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/26oV5hvb-4YoCzSMbtmQIGa5wCVA9OZNA66xcRA5ou0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e88644cc6f50ea39114b73c4c93fdcd0255fcf69",
                                        "width": 216,
                                        "height": 216
                                    }
                                ],
                                "variants": {},
                                "id": "ZvomsDUUq1nwFFcv7cmBXB6M7GTKpeW-369Pq12m6gI"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "",
                    "id": "wr3qww",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "Great_Adagio_9304",
                    "discussion_type": null,
                    "num_comments": 2,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wr3qww/how_private_is_your_private_browsing_tab_with/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wr3qww/how_private_is_your_private_browsing_tab_with/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660779436.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "Although FastAPI is a great framework with fantastic documentation, it's not quite obvious how to build larger projects for beginners. \n\nFor the last 1.5 years in production, we have been making good and bad decisions that impacted our developer experience dramatically. Some of them are worth sharing.\n\nI have seen posts asking for FastAPI conventions and best practices and I don't claim ours are really \"best\", but those are the conventions we followed at our startup.\n\nIt's a \"Work in Progress\" repo, but it already might be interesting for some devs.\n\n[https://github.com/zhanymkanov/fastapi-best-practices](https://github.com/zhanymkanov/fastapi-best-practices)",
                    "author_fullname": "t2_1d61lt7b",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "FastAPI Best Practices",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Resource"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "resource",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": true,
                    "name": "t3_wrt7om",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 1.0,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 2,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Resource",
                    "can_mod_post": false,
                    "score": 2,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660852869.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Although FastAPI is a great framework with fantastic documentation, it&amp;#39;s not quite obvious how to build larger projects for beginners. &lt;/p&gt;\n\n&lt;p&gt;For the last 1.5 years in production, we have been making good and bad decisions that impacted our developer experience dramatically. Some of them are worth sharing.&lt;/p&gt;\n\n&lt;p&gt;I have seen posts asking for FastAPI conventions and best practices and I don&amp;#39;t claim ours are really &amp;quot;best&amp;quot;, but those are the conventions we followed at our startup.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s a &amp;quot;Work in Progress&amp;quot; repo, but it already might be interesting for some devs.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/zhanymkanov/fastapi-best-practices\"&gt;https://github.com/zhanymkanov/fastapi-best-practices&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "",
                    "id": "wrt7om",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "n1EzeR",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrt7om/fastapi_best_practices/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrt7om/fastapi_best_practices/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660852869.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "I'm updating a fairly large legacy code-base (Py2) but have the freedom to write new tests in Py3 if I choose. Currently I'm familiar with Python and Selenium, with an understanding there are alternatives to Selenium out there. I do have a raw Py3 Pytest code-base I could build on.\n\nEssentially I'm looking for a simple and time friendly way to access a mail portal from where I'm at. The legacy base has Gmail tests in Py2. The last time they were updated Gmail was accessible through the web. Now from what I can see API access is more or less a required way to check Gmail emails.\n\nThe thing with doing the Gmail API is I'd prefer to avoid it. Sorry for the easy ask but I think, there are other options (IMAP?) that I could route for Gmail checks?\n\nOther question is what your experience is like with checking emails in Outlook, Office 365 web portal using Selenium and Python?\n\nAre there other simple mail portals you'd suggest I could write scripts for that I can just login, check the email context, and report that back for testing results? (I'm in QA) Appreciate the help!",
                    "author_fullname": "t2_j5gf4fxg",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "Working with a Selenium Python code base to access email",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Discussion"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "discussion",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": true,
                    "name": "t3_wrshvi",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 0.5,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 0,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Discussion",
                    "can_mod_post": false,
                    "score": 0,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660851127.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m updating a fairly large legacy code-base (Py2) but have the freedom to write new tests in Py3 if I choose. Currently I&amp;#39;m familiar with Python and Selenium, with an understanding there are alternatives to Selenium out there. I do have a raw Py3 Pytest code-base I could build on.&lt;/p&gt;\n\n&lt;p&gt;Essentially I&amp;#39;m looking for a simple and time friendly way to access a mail portal from where I&amp;#39;m at. The legacy base has Gmail tests in Py2. The last time they were updated Gmail was accessible through the web. Now from what I can see API access is more or less a required way to check Gmail emails.&lt;/p&gt;\n\n&lt;p&gt;The thing with doing the Gmail API is I&amp;#39;d prefer to avoid it. Sorry for the easy ask but I think, there are other options (IMAP?) that I could route for Gmail checks?&lt;/p&gt;\n\n&lt;p&gt;Other question is what your experience is like with checking emails in Outlook, Office 365 web portal using Selenium and Python?&lt;/p&gt;\n\n&lt;p&gt;Are there other simple mail portals you&amp;#39;d suggest I could write scripts for that I can just login, check the email context, and report that back for testing results? (I&amp;#39;m in QA) Appreciate the help!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "",
                    "id": "wrshvi",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "TF_3000",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrshvi/working_with_a_selenium_python_code_base_to/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrshvi/working_with_a_selenium_python_code_base_to/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660851127.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "[Blogpost link here](https://jcristharif.com/ibis-datasette.html)\n\nFor my day job I work on [ibis](https://ibis-project.org). ``ibis`` lets users write queries using a familiar dataframe-like API, and then execute those queries on a number of SQL (and non-SQL) backends. Think of it like [dplyr](https://dplyr.tidyverse.org/) but for Python.\n\nIt's designed to be extensible, and has a [number of builtin backends](https://ibis-project.org/docs/3.1.0/backends/support_matrix/). Common examples include `sqlite`, `duckdb`, `postgres`, `clickhouse`, `bigquery`, ...\n\nTo help acquaint myself with more of the internals, I hacked up a [new backend](https://github.com/jcrist/ibis-datasette) for querying [datasette](https://datasette.io/) servers. Datasette is a multi-tool for publishing and exploring SQLite databases. It's an *excellent* tool, I cannot recommend it enough.\n\nDatasette provides both a web UI and a JSON API. The `ibis` backend hooks up to the JSON API and uses it to send SQL requests and retrieve results. This means you can explore datasettes from the comfort of your terminal, without ever writing a line of SQL.\n\nFor example, to explore the [US Representatives Datasette](https://congress-legislators.datasettes.com/legislators):\n\n```python\nIn [1]: import ibis\n\nIn [2]: ibis.options.interactive = True\n\nIn [3]: con = ibis.datasette.connect(\n   ...:    \"https://congress-legislators.datasettes.com/legislators\"\n   ...: )\n\nIn [4]: legislators = con.tables[\"legislators\"]\n\nIn [5]: legislators.groupby(\"bio_gender\").count()\nOut[5]:\n  bio_gender  count\n0          F    399\n1          M  12195\n```\n\nI wrote up a longer blogpost about the project (and ``ibis`` as well). Give it a read if you're interested:\n\nhttps://jcristharif.com/ibis-datasette.html",
                    "author_fullname": "t2_a9htc",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "ibis-datasette: Query datasette servers without writing a line of SQL",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Intermediate Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "intermediate-showcase",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrm8m6",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 1.0,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 1,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Intermediate Showcase",
                    "can_mod_post": false,
                    "score": 1,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": 1660837386.0,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "self",
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660835944.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://jcristharif.com/ibis-datasette.html\"&gt;Blogpost link here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For my day job I work on &lt;a href=\"https://ibis-project.org\"&gt;ibis&lt;/a&gt;. &lt;code&gt;ibis&lt;/code&gt; lets users write queries using a familiar dataframe-like API, and then execute those queries on a number of SQL (and non-SQL) backends. Think of it like &lt;a href=\"https://dplyr.tidyverse.org/\"&gt;dplyr&lt;/a&gt; but for Python.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s designed to be extensible, and has a &lt;a href=\"https://ibis-project.org/docs/3.1.0/backends/support_matrix/\"&gt;number of builtin backends&lt;/a&gt;. Common examples include &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;duckdb&lt;/code&gt;, &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;clickhouse&lt;/code&gt;, &lt;code&gt;bigquery&lt;/code&gt;, ...&lt;/p&gt;\n\n&lt;p&gt;To help acquaint myself with more of the internals, I hacked up a &lt;a href=\"https://github.com/jcrist/ibis-datasette\"&gt;new backend&lt;/a&gt; for querying &lt;a href=\"https://datasette.io/\"&gt;datasette&lt;/a&gt; servers. Datasette is a multi-tool for publishing and exploring SQLite databases. It&amp;#39;s an &lt;em&gt;excellent&lt;/em&gt; tool, I cannot recommend it enough.&lt;/p&gt;\n\n&lt;p&gt;Datasette provides both a web UI and a JSON API. The &lt;code&gt;ibis&lt;/code&gt; backend hooks up to the JSON API and uses it to send SQL requests and retrieve results. This means you can explore datasettes from the comfort of your terminal, without ever writing a line of SQL.&lt;/p&gt;\n\n&lt;p&gt;For example, to explore the &lt;a href=\"https://congress-legislators.datasettes.com/legislators\"&gt;US Representatives Datasette&lt;/a&gt;:&lt;/p&gt;\n\n&lt;p&gt;```python\nIn [1]: import ibis&lt;/p&gt;\n\n&lt;p&gt;In [2]: ibis.options.interactive = True&lt;/p&gt;\n\n&lt;p&gt;In [3]: con = ibis.datasette.connect(\n   ...:    &amp;quot;&lt;a href=\"https://congress-legislators.datasettes.com/legislators\"&gt;https://congress-legislators.datasettes.com/legislators&lt;/a&gt;&amp;quot;\n   ...: )&lt;/p&gt;\n\n&lt;p&gt;In [4]: legislators = con.tables[&amp;quot;legislators&amp;quot;]&lt;/p&gt;\n\n&lt;p&gt;In [5]: legislators.groupby(&amp;quot;bio_gender&amp;quot;).count()\nOut[5]:\n  bio_gender  count\n0          F    399\n1          M  12195\n```&lt;/p&gt;\n\n&lt;p&gt;I wrote up a longer blogpost about the project (and &lt;code&gt;ibis&lt;/code&gt; as well). Give it a read if you&amp;#39;re interested:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://jcristharif.com/ibis-datasette.html\"&gt;https://jcristharif.com/ibis-datasette.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/uvVhmrYlph8JwThi4zu6c73oWEOwCBS7_b3qSLjOgTE.jpg?auto=webp&amp;s=9164483349ddf08816171a23c08a780fbce448fe",
                                    "width": 494,
                                    "height": 384
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/uvVhmrYlph8JwThi4zu6c73oWEOwCBS7_b3qSLjOgTE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ef8aeef83b3386c6ec6e8f6ff9ec51c24c237e25",
                                        "width": 108,
                                        "height": 83
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/uvVhmrYlph8JwThi4zu6c73oWEOwCBS7_b3qSLjOgTE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d48d642d59edc68c6c7cd9c1f938fcc48b66a3e6",
                                        "width": 216,
                                        "height": 167
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/uvVhmrYlph8JwThi4zu6c73oWEOwCBS7_b3qSLjOgTE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fc426c766cec2e3ebda1ab5500e8e240dd0d3335",
                                        "width": 320,
                                        "height": 248
                                    }
                                ],
                                "variants": {},
                                "id": "vg6ZxHi615WQ5Ms8_KGTMDjc4XhsPg_kWbZDCbvUfSE"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#ea0027",
                    "id": "wrm8m6",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "jammycrisp",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrm8m6/ibisdatasette_query_datasette_servers_without/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrm8m6/ibisdatasette_query_datasette_servers_without/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660835944.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "",
                    "author_fullname": "t2_2dvorcab",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "pre-commit-config-shellcheck for syntax and semantic checks automation",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Tutorial"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "tutorial",
                    "downs": 0,
                    "thumbnail_height": 73,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrjsc1",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 1.0,
                    "author_flair_background_color": null,
                    "ups": 1,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Tutorial",
                    "can_mod_post": false,
                    "score": 1,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/KnNh3zbXdu2HIl-S5v9HviZ_AXtCrgpCM8jwXCy8ZUE.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "link",
                    "content_categories": null,
                    "is_self": false,
                    "subreddit_type": "public",
                    "created": 1660829782.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "anadea.info",
                    "allow_live_comments": false,
                    "selftext_html": null,
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "url_overridden_by_dest": "https://anadea.info/blog/pre-commit-config-shellcheck",
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/2wnmqLJqdfD6lPGQ_-FKrXYkj0P9gkPsfYgfVIvEG8s.jpg?auto=webp&amp;s=40213fd551a5b5696efc90cc5daa797cf4b7470f",
                                    "width": 1200,
                                    "height": 628
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/2wnmqLJqdfD6lPGQ_-FKrXYkj0P9gkPsfYgfVIvEG8s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b42b9484a11fb559d0e5e9cee428f48ab6c63eff",
                                        "width": 108,
                                        "height": 56
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/2wnmqLJqdfD6lPGQ_-FKrXYkj0P9gkPsfYgfVIvEG8s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=5225b21adc4b4d088d51a9abc7b4cac70d4a4823",
                                        "width": 216,
                                        "height": 113
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/2wnmqLJqdfD6lPGQ_-FKrXYkj0P9gkPsfYgfVIvEG8s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=813df44ccfd7e15d2f50aa0d39d8251168abca5f",
                                        "width": 320,
                                        "height": 167
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/2wnmqLJqdfD6lPGQ_-FKrXYkj0P9gkPsfYgfVIvEG8s.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=54d59076e4a24f283bbd5ba5ab4831c4255642db",
                                        "width": 640,
                                        "height": 334
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/2wnmqLJqdfD6lPGQ_-FKrXYkj0P9gkPsfYgfVIvEG8s.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5d8bdb318522c609607c62cfee3093fafa5aba85",
                                        "width": 960,
                                        "height": 502
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/2wnmqLJqdfD6lPGQ_-FKrXYkj0P9gkPsfYgfVIvEG8s.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=89ea8e57b3547f6deeec129b7f305596208546a0",
                                        "width": 1080,
                                        "height": 565
                                    }
                                ],
                                "variants": {},
                                "id": "kEumqTo0x2Huopvnk1bgSVLBMJUHbhul9_i3qfc2Se4"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "mod_note": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "num_reports": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#dadada",
                    "id": "wrjsc1",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "Anadea",
                    "discussion_type": null,
                    "num_comments": 1,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrjsc1/precommitconfigshellcheck_for_syntax_and_semantic/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://anadea.info/blog/pre-commit-config-shellcheck",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660829782.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "",
                    "author_fullname": "t2_yeda6sl",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "Implementing DBSCAN in Python",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Tutorial"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "tutorial",
                    "downs": 0,
                    "thumbnail_height": 93,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrb943",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 0.6,
                    "author_flair_background_color": null,
                    "ups": 1,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Tutorial",
                    "can_mod_post": false,
                    "score": 1,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/UOBKfjGP9Ze-3ZuRi1FwwSoLRutjuoh-efUkdsmTA4Y.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "link",
                    "content_categories": null,
                    "is_self": false,
                    "subreddit_type": "public",
                    "created": 1660801165.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "kdnuggets.com",
                    "allow_live_comments": false,
                    "selftext_html": null,
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "url_overridden_by_dest": "https://www.kdnuggets.com/2022/08/implementing-dbscan-python.html",
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/7q92pUjLg8PBv5YIdbizEiayrOld6bYpcud8UZvpZPY.jpg?auto=webp&amp;s=3eed011d2954413a63a78db5f0974a5899072a73",
                                    "width": 1200,
                                    "height": 800
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/7q92pUjLg8PBv5YIdbizEiayrOld6bYpcud8UZvpZPY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1a30318802bb027a2584aa73881134d7b06b25fa",
                                        "width": 108,
                                        "height": 72
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/7q92pUjLg8PBv5YIdbizEiayrOld6bYpcud8UZvpZPY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=078b3c8c6615736a4b85cd3d81b69c7554d97a92",
                                        "width": 216,
                                        "height": 144
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/7q92pUjLg8PBv5YIdbizEiayrOld6bYpcud8UZvpZPY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=420fccc32ba0a0d274bc530db7cab454889a99b5",
                                        "width": 320,
                                        "height": 213
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/7q92pUjLg8PBv5YIdbizEiayrOld6bYpcud8UZvpZPY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c822e2e06171e93a13e37c2a7ef2dc7e7cb9a45f",
                                        "width": 640,
                                        "height": 426
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/7q92pUjLg8PBv5YIdbizEiayrOld6bYpcud8UZvpZPY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ce0c54d5d613a749bc0dd80e23f3ad9551fb10c3",
                                        "width": 960,
                                        "height": 640
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/7q92pUjLg8PBv5YIdbizEiayrOld6bYpcud8UZvpZPY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d5449c596f5554d745682b75200e670677378381",
                                        "width": 1080,
                                        "height": 720
                                    }
                                ],
                                "variants": {},
                                "id": "5Th00Aq-utf8nnylJFBQVFWc2PDoGDibAJZFS5xzNDA"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "mod_note": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "num_reports": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#dadada",
                    "id": "wrb943",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "kingabzpro",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrb943/implementing_dbscan_in_python/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.kdnuggets.com/2022/08/implementing-dbscan-python.html",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660801165.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "Hello! My name is Joshua and I'm a malware / game developer, I recently got interested into IT security and malwares and decided to give it a go.\n\nNote that all of my projects are for EDUCATIONAL PURPOSES only and are not configured to work (the code works but some functions don't have the right arguments). This projects are meant to help people understand how malwares work and help them get into IT security, and please, do not use any of my projects for harming anyone, as that can get you into serious troubles.\n\nEvery project is fully documented and the code is readable, I made it as simple as possible so that anyone can understand it, let me know if you have some doubts, it would mean a lot if you starred some of the projects :) here are the links! Have fun!\n\nMy GitHub profile: [https://github.com/JoshuaKasa](https://github.com/JoshuaKasa)\n\nMy first malware (done 6/7 months ago DON'T USE IT AGAINST ANYONE): [https://github.com/JoshuaKasa/Agent-48](https://github.com/JoshuaKasa/Agent-48)\n\nMy first ransomware: [https://github.com/JoshuaKasa/Replica](https://github.com/JoshuaKasa/Replica)\n\nNot very destructive malware: [https://github.com/JoshuaKasa/FUEL](https://github.com/JoshuaKasa/FUEL)\n\nDestrcutive malware (DON'T USE IT AGAINST ANYONE): [https://github.com/JoshuaKasa/Antidot](https://github.com/JoshuaKasa/Antidot)\n\nIf you have any suggestions or modification you would do you can make a pull request, i would love that!",
                    "author_fullname": "t2_5gusxohh",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "IT security and malwares",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Intermediate Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "intermediate-showcase",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrm23g",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.5,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 0,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Intermediate Showcase",
                    "can_mod_post": false,
                    "score": 0,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "self",
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660835487.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello! My name is Joshua and I&amp;#39;m a malware / game developer, I recently got interested into IT security and malwares and decided to give it a go.&lt;/p&gt;\n\n&lt;p&gt;Note that all of my projects are for EDUCATIONAL PURPOSES only and are not configured to work (the code works but some functions don&amp;#39;t have the right arguments). This projects are meant to help people understand how malwares work and help them get into IT security, and please, do not use any of my projects for harming anyone, as that can get you into serious troubles.&lt;/p&gt;\n\n&lt;p&gt;Every project is fully documented and the code is readable, I made it as simple as possible so that anyone can understand it, let me know if you have some doubts, it would mean a lot if you starred some of the projects :) here are the links! Have fun!&lt;/p&gt;\n\n&lt;p&gt;My GitHub profile: &lt;a href=\"https://github.com/JoshuaKasa\"&gt;https://github.com/JoshuaKasa&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My first malware (done 6/7 months ago DON&amp;#39;T USE IT AGAINST ANYONE): &lt;a href=\"https://github.com/JoshuaKasa/Agent-48\"&gt;https://github.com/JoshuaKasa/Agent-48&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My first ransomware: &lt;a href=\"https://github.com/JoshuaKasa/Replica\"&gt;https://github.com/JoshuaKasa/Replica&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Not very destructive malware: &lt;a href=\"https://github.com/JoshuaKasa/FUEL\"&gt;https://github.com/JoshuaKasa/FUEL&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Destrcutive malware (DON&amp;#39;T USE IT AGAINST ANYONE): &lt;a href=\"https://github.com/JoshuaKasa/Antidot\"&gt;https://github.com/JoshuaKasa/Antidot&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you have any suggestions or modification you would do you can make a pull request, i would love that!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/YSxGjIXtKDXdXg1H8_E6bzQT0OFa9ieavx5OYZf7iw4.jpg?auto=webp&amp;s=3fe8960dafa52877fa1d12e520ffaa68e8786761",
                                    "width": 254,
                                    "height": 254
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/YSxGjIXtKDXdXg1H8_E6bzQT0OFa9ieavx5OYZf7iw4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d506c2f8e393f29b257210374982fe01011858e5",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/YSxGjIXtKDXdXg1H8_E6bzQT0OFa9ieavx5OYZf7iw4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=490c03dc7be82f3c4f7741daec58edfe05b36564",
                                        "width": 216,
                                        "height": 216
                                    }
                                ],
                                "variants": {},
                                "id": "yjnNHdASz9K8It10uZzCLKz3QvKLpFVHZu2HUsg8Yk0"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#ea0027",
                    "id": "wrm23g",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "JizosKasa",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrm23g/it_security_and_malwares/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wrm23g/it_security_and_malwares/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660835487.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "",
                    "author_fullname": "t2_wuvnb",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "Invasive procedures: Python affordances for performance measurement",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Resource"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "resource",
                    "downs": 0,
                    "thumbnail_height": 70,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrlu2h",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 0.5,
                    "author_flair_background_color": null,
                    "ups": 0,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Resource",
                    "can_mod_post": false,
                    "score": 0,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/wdXUw5pOdQMIfmcjGXLSuYW7gzmAao20b9ZVGP6K72k.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "link",
                    "content_categories": null,
                    "is_self": false,
                    "subreddit_type": "public",
                    "created": 1660834945.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "pythonspeed.com",
                    "allow_live_comments": false,
                    "selftext_html": null,
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "url_overridden_by_dest": "https://pythonspeed.com/articles/measuring-python-performance/",
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/F_I6zfgBcUAjS_CLPKF90tvTZeHTqX-OtohInFst3A0.jpg?auto=webp&amp;s=0e1144d203ebbf865d82bf07534210416b347346",
                                    "width": 795,
                                    "height": 398
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/F_I6zfgBcUAjS_CLPKF90tvTZeHTqX-OtohInFst3A0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=da28b511da6fbeb6b668eb7dd43caeb2dcf9bf15",
                                        "width": 108,
                                        "height": 54
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/F_I6zfgBcUAjS_CLPKF90tvTZeHTqX-OtohInFst3A0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b4f273cd1ec17876b9cda25fcdeae071b1d2896e",
                                        "width": 216,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/F_I6zfgBcUAjS_CLPKF90tvTZeHTqX-OtohInFst3A0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=26a0328624ea7e0ebc9fa4a67bfeb46cdce282b7",
                                        "width": 320,
                                        "height": 160
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/F_I6zfgBcUAjS_CLPKF90tvTZeHTqX-OtohInFst3A0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e6ecaabb1a4779dac0ce7f92b3a89647cfa6ccfd",
                                        "width": 640,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "cD5AALo2Ws2nTqHjX4vc3EOL39x5E6OtPdPUSgUlETo"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "mod_note": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "num_reports": null,
                    "removal_reason": null,
                    "link_flair_background_color": "",
                    "id": "wrlu2h",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "itamarst",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrlu2h/invasive_procedures_python_affordances_for/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://pythonspeed.com/articles/measuring-python-performance/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660834945.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "",
                    "author_fullname": "t2_wjuu5",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "Forecasting Time Series data with Prophet in python",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Tutorial"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "tutorial",
                    "downs": 0,
                    "thumbnail_height": 67,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrgslv",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 0.5,
                    "author_flair_background_color": null,
                    "ups": 0,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Tutorial",
                    "can_mod_post": false,
                    "score": 0,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/WmpX_YcMiy19emjjLRyTUsLNic01eXQh7ROly3wWRYw.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "link",
                    "content_categories": null,
                    "is_self": false,
                    "subreddit_type": "public",
                    "created": 1660821124.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "tushynski.me",
                    "allow_live_comments": false,
                    "selftext_html": null,
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "url_overridden_by_dest": "https://tushynski.me/forecasting-timeseries-data-with-prophet-in-python/",
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/p6K5PcfBO9Ga_h_tT3-hchx0w5JOufDLpd0oLs2Xxaw.jpg?auto=webp&amp;s=dce04d3f9fbc866c15dae1d02e80542bfff84e3d",
                                    "width": 1424,
                                    "height": 690
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/p6K5PcfBO9Ga_h_tT3-hchx0w5JOufDLpd0oLs2Xxaw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5832ed40e2ba3d8e85646335f407e8ef9a6e394a",
                                        "width": 108,
                                        "height": 52
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/p6K5PcfBO9Ga_h_tT3-hchx0w5JOufDLpd0oLs2Xxaw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f5a14ff480ac836346dd2c34eb295d39a95cda31",
                                        "width": 216,
                                        "height": 104
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/p6K5PcfBO9Ga_h_tT3-hchx0w5JOufDLpd0oLs2Xxaw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c805c9ca00f3497a5555eeaaa9a04e941d9fcdf7",
                                        "width": 320,
                                        "height": 155
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/p6K5PcfBO9Ga_h_tT3-hchx0w5JOufDLpd0oLs2Xxaw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=954f27d3d4e487eca382462c1f70f1f8e190fa6b",
                                        "width": 640,
                                        "height": 310
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/p6K5PcfBO9Ga_h_tT3-hchx0w5JOufDLpd0oLs2Xxaw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=8c25051aa8d72c575490ee9454fa76ce17c06ed2",
                                        "width": 960,
                                        "height": 465
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/p6K5PcfBO9Ga_h_tT3-hchx0w5JOufDLpd0oLs2Xxaw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=808f12881e1377a63d39477706fb51700ec6fc25",
                                        "width": 1080,
                                        "height": 523
                                    }
                                ],
                                "variants": {},
                                "id": "YqEGXrK6Ir49IRoJR_4Rpwbqvoohnv5gACw5yi0LyGU"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "mod_note": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "num_reports": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#dadada",
                    "id": "wrgslv",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "ale10xtu",
                    "discussion_type": null,
                    "num_comments": 0,
                    "send_replies": false,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrgslv/forecasting_time_series_data_with_prophet_in/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://tushynski.me/forecasting-timeseries-data-with-prophet-in-python/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660821124.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "",
                    "author_fullname": "t2_5b090nno",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "How to Easily Turn Your Python Application Into an Executable - auto-py-to-exe",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Tutorial"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "tutorial",
                    "downs": 0,
                    "thumbnail_height": 140,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wrgsec",
                    "quarantine": false,
                    "link_flair_text_color": "dark",
                    "upvote_ratio": 0.5,
                    "author_flair_background_color": null,
                    "ups": 0,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": 140,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Tutorial",
                    "can_mod_post": false,
                    "score": 0,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "https://b.thumbs.redditmedia.com/YowK5fDK9EN2dlvon7KSKlYTdKeItHt7inAQhO7xvfE.jpg",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "post_hint": "link",
                    "content_categories": null,
                    "is_self": false,
                    "subreddit_type": "public",
                    "created": 1660821105.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "blog.thami.me",
                    "allow_live_comments": false,
                    "selftext_html": null,
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "url_overridden_by_dest": "https://blog.thami.me/posts/how-to-easily-turn-your-python-application-into-an-executable/",
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://external-preview.redd.it/Nuq1a0Mn90hQrTUzCq-v3TL5JPvrRWQvCEcy94F0WF4.jpg?auto=webp&amp;s=f0bea814ef34b2c1865ebe8615339b01def6be75",
                                    "width": 1000,
                                    "height": 1000
                                },
                                "resolutions": [
                                    {
                                        "url": "https://external-preview.redd.it/Nuq1a0Mn90hQrTUzCq-v3TL5JPvrRWQvCEcy94F0WF4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5d71e8032bdb0ad4d74a21e34a768288fd70d4c6",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/Nuq1a0Mn90hQrTUzCq-v3TL5JPvrRWQvCEcy94F0WF4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=517f9e66a36073ba89896d54c113a89f6cba239e",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/Nuq1a0Mn90hQrTUzCq-v3TL5JPvrRWQvCEcy94F0WF4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7bb203dade49b0a99b087078ad37d2668a1789fc",
                                        "width": 320,
                                        "height": 320
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/Nuq1a0Mn90hQrTUzCq-v3TL5JPvrRWQvCEcy94F0WF4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=13528ab475f228382fa40ecc135c816252ecf2b0",
                                        "width": 640,
                                        "height": 640
                                    },
                                    {
                                        "url": "https://external-preview.redd.it/Nuq1a0Mn90hQrTUzCq-v3TL5JPvrRWQvCEcy94F0WF4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e461c75b294ca77dd132a53cb4f5fb1f5fb340dd",
                                        "width": 960,
                                        "height": 960
                                    }
                                ],
                                "variants": {},
                                "id": "Kiu8o8FWIZtS0PrrvBEq6zGC6NF5e-jmxYBTdA1Jjrg"
                            }
                        ],
                        "enabled": false
                    },
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "mod_note": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "num_reports": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#dadada",
                    "id": "wrgsec",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "YarkanLinux",
                    "discussion_type": null,
                    "num_comments": 2,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wrgsec/how_to_easily_turn_your_python_application_into/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://blog.thami.me/posts/how-to-easily-turn-your-python-application-into-an-executable/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660821105.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "In this app, you are able to convert celsius to fahrenheit, kelvin to celsius, etc. I tried to optimize it as much as possible with my current knowledge, and while doing so, cut 35 unnecessary lines of code. Any feedback is welcomed!\n\n[https://github.com/SlyFryFrog/Unit-Converter](https://github.com/SlyFryFrog/Unit-Converter)",
                    "author_fullname": "t2_39lopxpd",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "Made a simple unit converter app - currently only has temperature conversions.",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Beginner Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "beginner-showcase",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wr7jv2",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.38,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 0,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Beginner Showcase",
                    "can_mod_post": false,
                    "score": 0,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660789908.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In this app, you are able to convert celsius to fahrenheit, kelvin to celsius, etc. I tried to optimize it as much as possible with my current knowledge, and while doing so, cut 35 unnecessary lines of code. Any feedback is welcomed!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SlyFryFrog/Unit-Converter\"&gt;https://github.com/SlyFryFrog/Unit-Converter&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#73ad34",
                    "id": "wr7jv2",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "SlyFryFrog",
                    "discussion_type": null,
                    "num_comments": 5,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wr7jv2/made_a_simple_unit_converter_app_currently_only/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wr7jv2/made_a_simple_unit_converter_app_currently_only/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660789908.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            },
            {
                "kind": "t3",
                "data": {
                    "approved_at_utc": null,
                    "subreddit": "Python",
                    "selftext": "Hey y'all! This is my first post here on r/Python. I've been making a CLI (written with Python's `argparse` module) for managing tasks and tasklists. It uses `sqlite3` to store the tasks/tasklists. \n\ntsk allows you to seamlessly create, update, and complete tasks. Pull requests welcome!\n\n[https://github.com/johndpjr/tsk](https://github.com/johndpjr/tsk)",
                    "author_fullname": "t2_60n4i2ny",
                    "saved": false,
                    "mod_reason_title": null,
                    "gilded": 0,
                    "clicked": false,
                    "title": "tsk: A task manager CLI",
                    "link_flair_richtext": [
                        {
                            "e": "text",
                            "t": "Beginner Showcase"
                        }
                    ],
                    "subreddit_name_prefixed": "r/Python",
                    "hidden": false,
                    "pwls": 6,
                    "link_flair_css_class": "beginner-showcase",
                    "downs": 0,
                    "thumbnail_height": null,
                    "top_awarded_type": null,
                    "hide_score": false,
                    "name": "t3_wqzwis",
                    "quarantine": false,
                    "link_flair_text_color": "light",
                    "upvote_ratio": 0.25,
                    "author_flair_background_color": null,
                    "subreddit_type": "public",
                    "ups": 0,
                    "total_awards_received": 0,
                    "media_embed": {},
                    "thumbnail_width": null,
                    "author_flair_template_id": null,
                    "is_original_content": false,
                    "user_reports": [],
                    "secure_media": null,
                    "is_reddit_media_domain": false,
                    "is_meta": false,
                    "category": null,
                    "secure_media_embed": {},
                    "link_flair_text": "Beginner Showcase",
                    "can_mod_post": false,
                    "score": 0,
                    "approved_by": null,
                    "is_created_from_ads_ui": false,
                    "author_premium": false,
                    "thumbnail": "self",
                    "edited": false,
                    "author_flair_css_class": null,
                    "author_flair_richtext": [],
                    "gildings": {},
                    "content_categories": null,
                    "is_self": true,
                    "mod_note": null,
                    "created": 1660769769.0,
                    "link_flair_type": "richtext",
                    "wls": 6,
                    "removed_by_category": null,
                    "banned_by": null,
                    "author_flair_type": "text",
                    "domain": "self.Python",
                    "allow_live_comments": false,
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey y&amp;#39;all! This is my first post here on &lt;a href=\"/r/Python\"&gt;r/Python&lt;/a&gt;. I&amp;#39;ve been making a CLI (written with Python&amp;#39;s &lt;code&gt;argparse&lt;/code&gt; module) for managing tasks and tasklists. It uses &lt;code&gt;sqlite3&lt;/code&gt; to store the tasks/tasklists. &lt;/p&gt;\n\n&lt;p&gt;tsk allows you to seamlessly create, update, and complete tasks. Pull requests welcome!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/johndpjr/tsk\"&gt;https://github.com/johndpjr/tsk&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "likes": null,
                    "suggested_sort": null,
                    "banned_at_utc": null,
                    "view_count": null,
                    "archived": false,
                    "no_follow": true,
                    "is_crosspostable": true,
                    "pinned": false,
                    "over_18": false,
                    "all_awardings": [],
                    "awarders": [],
                    "media_only": false,
                    "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63",
                    "can_gild": true,
                    "spoiler": false,
                    "locked": false,
                    "author_flair_text": null,
                    "treatment_tags": [],
                    "visited": false,
                    "removed_by": null,
                    "num_reports": null,
                    "distinguished": null,
                    "subreddit_id": "t5_2qh0y",
                    "author_is_blocked": false,
                    "mod_reason_by": null,
                    "removal_reason": null,
                    "link_flair_background_color": "#73ad34",
                    "id": "wqzwis",
                    "is_robot_indexable": true,
                    "report_reasons": null,
                    "author": "johndpjr",
                    "discussion_type": null,
                    "num_comments": 3,
                    "send_replies": true,
                    "whitelist_status": "all_ads",
                    "contest_mode": false,
                    "mod_reports": [],
                    "author_patreon_flair": false,
                    "author_flair_text_color": null,
                    "permalink": "/r/Python/comments/wqzwis/tsk_a_task_manager_cli/",
                    "parent_whitelist_status": "all_ads",
                    "stickied": false,
                    "url": "https://www.reddit.com/r/Python/comments/wqzwis/tsk_a_task_manager_cli/",
                    "subreddit_subscribers": 1007184,
                    "created_utc": 1660769769.0,
                    "num_crossposts": 0,
                    "media": null,
                    "is_video": false
                }
            }
        ],
        "before": null
    }
}